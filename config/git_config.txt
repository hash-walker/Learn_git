Git Config
Git stores author information so that when you're making a commit it can track who made the change. Here's how you might update your global Git configuration (don't do this yet):

git config --add --global user.name "ThePrimeagen"
git config --add --global user.email "the.primeagen@aol.com"
Copy icon
Let's take the command apart:

git config: The command to interact with your Git configuration.
--add: Flag stating you want to add a configuration.
--global: Flag stating you want this configuration to be stored globally in your ~/.gitconfig. The opposite is "local", which stores the configuration in the current repository only.
user: The section.
name: The key within the section.
"ThePrimeagen": The value you want to set for the key.
Assignment
You can actually store any old data in your Git configuration. Granted, only certain keys are used by Git, but you can store whatever you want.

Set the following useless key/value pairs in your local Git configuration for the Webflyx repository (omit the --global flag to set them locally):

webflyx.ceo "ThePrimeagen"
webflyx.cto "TheLaneagen"
webflyx.valuation "mid"
Git has a command to view the contents of your config:

git config --list --local
Copy icon
You can also just view the contents of your local config file directly:

cat .git/config
Copy icon
Run and submit the tests.
